AWSTemplateFormatVersion: "2010-09-09"
Description: 
  Create VPC and Subnets

# ------------------------------------------------------------#
# Mapping Variables
# ------------------------------------------------------------# 
Mappings:
  VPC:
    VPCCIDR: 
      Value: "10.0.0.0/16"
    PublicSubnetACIDR:
      Value: "10.0.0.0/24"
    PublicSubnetCCIDR:
      Value: "10.0.1.0/24"
    PrivateSubnetACIDR:
      Value: "10.0.2.0/24"
    PrivateSubnetCCIDR:
      Value: "10.0.3.0/24"

Resources: 
# ------------------------------------------------------------#
#  VPC
# ------------------------------------------------------------#
# VPC Create
  VPC: 
    Type: "AWS::EC2::VPC"
    Properties: 
      CidrBlock: !FindInMap [VPC, VPCCIDR, Value]
      EnableDnsSupport: "true"
      EnableDnsHostnames: "true"
      InstanceTenancy: default
      Tags: 
        - Key: Name
          Value: "handson-user1"

# InternetGateway Create
  InternetGateway: 
    Type: "AWS::EC2::InternetGateway"
    
# IGW Attach
  InternetGatewayAttachment: 
    Type: "AWS::EC2::VPCGatewayAttachment"
    Properties: 
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC 

# ------------------------------------------------------------#
#  Subnet
# ------------------------------------------------------------#          
# Public SubnetA Create
  PublicSubnetA: 
    Type: "AWS::EC2::Subnet"
    Properties: 
      AvailabilityZone: "ap-northeast-1a"
      CidrBlock: !FindInMap [VPC, PublicSubnetACIDR, Value]
      VpcId: !Ref VPC 
      Tags: 
        - Key: Name
          Value: !Sub "パブリックサブネット-1a"

# Public SubnetC Create
  PublicSubnetC: 
    Type: "AWS::EC2::Subnet"
    Properties: 
      AvailabilityZone: "ap-northeast-1c"
      CidrBlock: !FindInMap [VPC, PublicSubnetCCIDR, Value]
      VpcId: !Ref VPC 
      Tags: 
        - Key: Name
          Value: !Sub "パブリックサブネット-1c"

# Private SubnetA Create
  PrivateSubnetA: 
    Type: "AWS::EC2::Subnet"
    Properties: 
      AvailabilityZone: "ap-northeast-1a"
      CidrBlock: !FindInMap [VPC, PrivateSubnetACIDR, Value]
      VpcId: !Ref VPC 
      Tags: 
        - Key: Name
          Value: "プライベートサブネット-1a"

# Private SubnetC Create
  PrivateSubnetC: 
    Type: "AWS::EC2::Subnet"
    Properties: 
      AvailabilityZone: "ap-northeast-1c"
      CidrBlock: !FindInMap [VPC, PrivateSubnetCCIDR, Value]
      VpcId: !Ref VPC 
      Tags: 
        - Key: Name
          Value: "プライベートサブネット-1c"

# ------------------------------------------------------------#
#  RouteTable
# ------------------------------------------------------------#          
# Public RouteTableA Create
  PublicRouteTable: 
    Type: "AWS::EC2::RouteTable"
    Properties: 
      VpcId: !Ref VPC 
      Tags: 
        - Key: Name
          Value: "パブリックルートテーブル"

# ------------------------------------------------------------#
# Routing
# ------------------------------------------------------------# 
# PublicRouteA Create
  PublicRoute: 
    Type: "AWS::EC2::Route"
    Properties: 
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId: !Ref InternetGateway 

# ------------------------------------------------------------#
# RouteTable Associate
# ------------------------------------------------------------# 
# PublicRouteTable Associate SubnetA
  PublicSubnetARouteTableAssociation: 
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties: 
      SubnetId: !Ref PublicSubnetA 
      RouteTableId: !Ref PublicRouteTable

# PublicRouteTable Associate SubnetC
  PublicSubnetCRouteTableAssociation: 
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties: 
      SubnetId: !Ref PublicSubnetC 
      RouteTableId: !Ref PublicRouteTable

# ------------------------------------------------------------#
# Security Group
# ------------------------------------------------------------#
# Security Group for ELB
  ELBSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupName: "elb-user1"
      GroupDescription: "elb-user1"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: '0.0.0.0/0'
      VpcId: !Ref VPC
